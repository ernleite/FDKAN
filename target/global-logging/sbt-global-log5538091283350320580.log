[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ErnestoLeite\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ErnestoLeite\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.6 (Amazon.com Inc. Java 11.0.17)
[debug]       Load.loadUnit: plugins took 90.1466ms
[debug]       Load.loadUnit: defsScala took 0.2218ms
[debug] [Loading] Scanning directory C:\Users\ErnestoLeite\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ErnestoLeite\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.7495 ms
[debug]           Load.resolveProject(global-plugins) took 49.2876ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ErnestoLeite\.sbt\1.0\plugins, plugins: List(<none>))) took 90.3999ms
[debug] [Loading] Done in C:\Users\ErnestoLeite\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 110.5387ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2124ms
[debug]     Load.loadUnit(file:/C:/Users/ErnestoLeite/.sbt/1.0/plugins/, ...) took 209.195ms
[debug]   Load.apply: load took 350.4866ms
[debug]   Load.apply: resolveProjects took 7.2358ms
[debug]   Load.apply: finalTransforms took 49.1822ms
[debug]   Load.apply: config.delegates took 7.4862ms
[debug]   Load.apply: Def.make(settings)... took 384.9236ms
[debug]   Load.apply: structureIndex took 91.0351ms
[debug]   Load.apply: mkStreams took 2.3284ms
[info] loading global plugins from C:\Users\ErnestoLeite\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8345.2767ms
[debug]           Load.loadUnit: plugins took 15.7837ms
[debug]           Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Work\akka-samples-cluster-scala\project
[debug]             Load.loadUnit: mkEval took 7.3099ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Work\akka-samples-cluster-scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9507 ms
[info] loading settings for project akka-samples-cluster-scala-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(akka-samples-cluster-scala-build) took 2.0108ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akka-samples-cluster-scala-build, base: C:\Work\akka-samples-cluster-scala\project, plugins: List(<none>))) took 3.3085ms
[debug] [Loading] Done in C:\Work\akka-samples-cluster-scala\project, returning: (akka-samples-cluster-scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2048.6099ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.2835ms
[debug]         Load.loadUnit(file:/C:/Work/akka-samples-cluster-scala/project/, ...) took 2070.3003ms
[debug]       Load.apply: load took 2071.2106ms
[debug]       Load.apply: resolveProjects took 0.0875ms
[debug]       Load.apply: finalTransforms took 5.8966ms
[debug]       Load.apply: config.delegates took 0.2198ms
[debug]       Load.apply: Def.make(settings)... took 51.1042ms
[debug]       Load.apply: structureIndex took 18.3157ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\Work\akka-samples-cluster-scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3217.6522ms
[debug]     Load.loadUnit: defsScala took 0.002ms
[debug] [Loading] Scanning directory C:\Work\akka-samples-cluster-scala
[debug]       Load.loadUnit: mkEval took 0.1808ms
[debug] [Loading] Found root project akka-sample-cluster-scala w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(com.typesafe.sbt.MultiJvmPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtdynver.DynVerPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtdynver.DynVerPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbtdynver.DynVerPlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5116 ms
[info] loading settings for project akka-sample-cluster-scala from build.sbt ...
[debug]         Load.resolveProject(akka-sample-cluster-scala) took 20.9642ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akka-sample-cluster-scala, base: C:\Work\akka-samples-cluster-scala, configurations: List(multi-jvm), plugins: List(<none>))) took 24.1718ms
[debug] [Loading] Done in C:\Work\akka-samples-cluster-scala, returning: (akka-sample-cluster-scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 868.6125ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.0131ms
[debug]   Load.loadUnit(file:/C:/Work/akka-samples-cluster-scala/, ...) took 4088.7756ms
[debug] Load.apply: load took 4089.9137ms
[debug] Load.apply: resolveProjects took 0.0788ms
[debug] Load.apply: finalTransforms took 25.7011ms
[debug] Load.apply: config.delegates took 0.2141ms
[debug] Load.apply: Def.make(settings)... took 119.6445ms
[debug] Load.apply: structureIndex took 20.3128ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to akka-sample-cluster-scala (in build file:/C:/Work/akka-samples-cluster-scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53253 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53253, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to akka-sample-cluster-scala (in build file:/C:/Work/akka-samples-cluster-scala/)
[debug] > Exec(idea-shell, None, None)
